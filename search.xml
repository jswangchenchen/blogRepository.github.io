<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>[GithubPage+Hexo+域名]免费博客搭建指南</title>
      <link href="/GithubPage-hexo/Github-Hexo-%E5%9F%9F%E5%90%8D-%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
      <url>/GithubPage-hexo/Github-Hexo-%E5%9F%9F%E5%90%8D-%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h5 id="目的"><a href="#目的：" class="headerlink" title="目的："></a>目的：</h5><p>​    本地通过WordPress编写blog然后git进行版本的管理，在浏览器上只需要输入自己购买的域名就可以成功访问。</p><h5 id="准备工作"><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h5><p>​    1.本地下载安装git ：<a href="https://git-scm.com/download/" target="_blank" rel="noopener">git官网下载地址</a></p><p>​    2.本地下载安装node：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">node官网下载地址</a></p><p>​    3.本地下载安装Hexo： </p><p>​        安装好上面的两项后直接打开cmd输入：npm install hexo-cli -g</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\安装HexoCMD.png" alt="安装HexoCMD"></p><p>​    4.创建github账号   格式 - 你为仓库取的名字.github.io(例如：blog.github.io因为普通的github会混淆)</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\创建仓库-1.png" alt="创建仓库-1"></p><p>​    <img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\创建仓库-2.png" alt="创建仓库-2"></p><h5 id="主要过程"><a href="#主要过程：" class="headerlink" title="主要过程："></a>主要过程：</h5><p>​    确定存放blog的路径，我的是e:/Blog；</p><p>​    Git Bash Here 打开：右键你的文件单击Git Bash Here；</p><p>​    在保证Git是在你的blog下操作的前提，开始初始化Hexo的文件夹：hexo init 你的仓库名字.github.io</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\初始化.png" alt="初始化"></p><p>​    稍等一会之后目录下就会有个文件夹，文件夹的名字就是你初始化的名字也就是仓库的名字</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\初始化后.png" alt="初始化后"></p><p>​    里面的文件及每个文件的作用如下：</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\本地文件含义.png" alt="本地文件含义"></p><p>​    走到这里就表示本地的简单搭建已经好了，默认的主题是landscape的主题</p><p>​    生成静态页面</p><p>​        进入到blog.github.io里面输入创建 hexo输入如下：</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\hexo创建.png" alt="hexo创建"></p><p>​        启动本地服务器，开启端口默认是4000.</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\hexo开启服务器.png" alt="hexo开启服务器"></p><p>​        浏览器输入<a href="https://link.jianshu.com/?t=http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><p>​        下面会出先两种情况，一种顺利通过（跳过下面内容），另一种显示加载失败（端口被占/检查名字是否和仓库中一样）如果端口被占先Ctrl+C停止程序更改端口这里我改成5000。</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\该端口.png" alt="该端口"></p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\本地4000预览命令.png" alt="本地4000预览命令"></p><p>​        这时候你就可以进行预览了。</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\本地4000预览博客.png" alt="本地4000预览博客"></p><p>提交到GitHub</p><p>​        更改全局配置可以让hex直接和远端仓库连接打开_config.yml(注意格式，顺序，空格)</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\全局github库配置.png" alt="全局github库配置"></p><p>​        上面的repository填写的就是仓库的地址，下图位置复制进来就可；</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\拿到地址.png" alt="拿到地址"></p><p>​        首次部署附加内容：</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\首次部署内容.png" alt="首次部署内容"></p><p>​    添加完成后github的库就会增加一定的内容。看上图</p><p>​    下次更新时只需要先删除hexo在创建一个然后将配置上传就好</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\重新上传.png" alt="重新上传"></p><p>​    常用命令解释:</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\常用命令.png" alt="常用命令"></p><p>​    直接访问github博客 Settings-&gt;Github Pages -&gt;Source-&gt; master branch</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\ssettings访问-2.png" alt="ssettings访问-2"></p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\settings访问-1.png" alt="settings访问-1"></p><p>​    打开后因为css和js路径不对所以更换自定义的域名最好；</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\失败Hexo.png" alt="失败Hexo"></p><p>​    买域名-&gt;解析-&gt;添加俩A类记录 WWW 和 @ 服务器IP就填github的IP固定的151.101.72.133</p><p>​    在仓库中新建CNAME，文中写上你的域名，果断时间就可以直接访问了。</p><p>​    由于每次提交都会覆盖前一次，所以最好的是在本地留个位置，进入source看到_posts添加CNAME文件，加上自己的域名；</p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\本地添加Blog地址.png" alt="本地添加Blog地址"></p><p><img src="/GithubPage-hexo/Github-Hexo-域名-免费博客搭建指南/contentImg\添加域名.png" alt="添加域名"></p><h6 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h6><p>​    到这里你在浏览器上输入自己的域名就能直接访问自己的bolg了，最后恭喜你成功入坑，如果有什么不好的欢迎指教。如果对你有帮助希望有机会可以互相学习。</p>]]></content>
      
      
      <categories>
          
          <category> GithubPage; hexo; </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[U3D+Vuforia+VR眼镜] 分屏设置指南</title>
      <link href="/VR-AR%EF%BC%9B-Vuforia%EF%BC%9B-Unity3D/%5BU3D+Vuforia+VR%E7%9C%BC%E9%95%9C%5D%E5%88%86%E5%B1%8F%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
      <url>/VR-AR%EF%BC%9B-Vuforia%EF%BC%9B-Unity3D/%5BU3D+Vuforia+VR%E7%9C%BC%E9%95%9C%5D%E5%88%86%E5%B1%8F%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h6 id="版本"><a href="#版本" class="headerlink" title="版本:"></a>版本:</h6><p>​    unity 2018.2.14f1   Vuforia 7.2.20</p><h6 id="关键"><a href="#关键" class="headerlink" title="关键:"></a>关键:</h6><p>​    添加cardboard</p><p>​    将视觉改变为“video see Through”（windows-&gt; Vuforia Configuration-&gt;Digtal Eyewear），</p><h6 id="简介"><a href="#简介：" class="headerlink" title="简介："></a>简介：</h6><p>​    准备工作：</p><p>​        本地正确安装，并且成功配置Android SDK，NDK ，java JDK 的unity3D（注意版本，可参考我的版本）</p><p>​        Vurforia官网利用待测物体分析模型成功得到.unitypage的数据集 并成功生成 public key。</p><p>​        附：版本很重要，Vuforia 6.5之前的版本并没有自带VR眼镜的的功能，建议在安装U3D（unity3D以下用U3D代替）的时候确保在Vuforia一栏点选了默认安装系统会自动下载最新的Vuforia。</p><h6 id="步骤"><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h6><p>​        下面开始干活。进入U3D， 首先导入上面提到的待检测的.unitypage数据集:下面工具栏中project界面中的Assects，右击-&gt;import Package -&gt;Custom Package-&gt;进入自己存放数据集的地方直接点击import</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img/导入待测数据集.png" alt="导入待测数据集"></p><p>​        下一步添加ARCamera（正常的MainCamera在AR的时候是不够的）：\<sample sence\="">空白处右击-&gt;vuforia-&gt;ARCamera（记得删除原有的MainCamera哦，右击delete）；</sample></p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\导入ARCamera.png" alt="导入ARCamera"></p><p>​        设置Camera的数据，在主屏右侧Inspector中选择（贴图参考）；</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\ARCamera参数参考.png" alt="ARCamera参数参考"></p><p>​        添加AR参照物(image Target)到Scence中：\<sample sence\="">空白处右击-&gt;Vuforia-&gt;Image</sample></p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\添加Image Traget.png" alt="添加Image Traget"></p><p>​        添加你想显示的虚拟对象，这里就直接从Asset Store中找一个免费的红武士进入搜索栏搜索“red Samurai”直接回车第二个标注Free的就是。没错点它-&gt;import</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\添加 红武士.png" alt="添加 红武士"></p><p>​        将添加到本地项目的红武士添加到界面中：Assets-&gt;prefab-&gt;红武士文件直接拖到image Target子目录下。</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\导入红武士.png" alt="导入红武士"></p><p>​        导入Vuforia配置：File-Bulid Setting 进入Build Setting界面点击android，右侧bulid system 选择Internal，-&gt;点击Player Settings进入inspector做以下几件事：</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\play Settings 改system.png" alt="play Settings 改system"></p><p>​            1.填写Company Name （随便填）；</p><p>​            2.点击Other Setting-&gt;identification 填写Package Name 注意格式com.Company Name.Product Name，需要注意的是，Company Name必须和上面填写的一样，Product Name可以不填。我的是com.chenchen.ProductName(参考)；</p><p>​            3.更改Minimum ARI Level等级，默认是16但是里面并不能支持此次开发，需要改成19，</p><p>​            4.在上面的基础上下拉，到Configurition栏，找到Android TV Compatbility系统默认是将这个选项是选上的你需要的是将它取消选择。</p><p>​            5.点开XR Settings三个选择点击第三个（Virtual augmented Reality）和第一个（Virtual Reality supported ），第三个如果不点在手机端生成的就是支持VR的不是不是AR的（看不到画面），第一个选择-&gt;为Virtual Reality SDKs添加-&gt;右下角“+”号-&gt;点击最下面的Vuforia</p><p>​        前四步：</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\play settings 前期多步.png" alt="play settings 前期多步"></p><p>​        第五步：<img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\添加vuforia.png" alt="添加vuforia"></p><p>​        下面一步比较重要，将Vuforia官网生成的PublicKey，配置进系统中激活U3D中的Vuforia：上面工具栏Window-&gt;Vuforia configuration,进入inspect，APP License Key 中将相关key 复制进去（这部是激活Vuforia）；</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\导入publicKey.png" alt="导入publicKey"></p><p>​        安装Cardboard：File-Bulid Setting 进入Build Setting界面点击android-&gt;点击Player Settings进入inspector-&gt;XR Settings 点击刚刚的第一个-&gt;“+”号-&gt;选择第一cardboard；</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\填加cardboard.png" alt="填加cardboard"></p><p>下一步更改视觉成像，改变成“video see Through”；回到上面加key的页面下面Digital Eyewear-&gt;Device Type -&gt;选择最后一个Phone + viewer 其他的根据自己的实际情况进行选择，我都是直接默认的。</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\public Key+Through.png" alt="public Key+Through"></p><p>​        最后一步直接生成apk 文件File-Bulid Setting 进入Build Setting 界面-&gt;android-&gt;Build;<img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\生成build.png" alt="生成build"></p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\生成apk文件.png" alt="生成apk文件"></p><p>以上就会用U3D Vuforia为基础创建一个在VR眼镜上的AR程序，手机显示分屏的哦。</p><p>​    手机成果：</p><p><img src="/VR-AR；-Vuforia；-Unity3D/[U3D+Vuforia+VR眼镜]分屏设置指南/content_img\手机生成结果.png" alt="手机生成结果"></p><h6 id="结语"><a href="#结语：" class="headerlink" title="结语："></a>结语：</h6><p>如有不足之处望各位大佬打脸，如果对你有帮助也希望有机会一起提高。</p>]]></content>
      
      
      <categories>
          
          <category> VR+AR； Vuforia； Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XR </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Typora]操作指南</title>
      <link href="/article/%5BTypora%5D%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
      <url>/article/%5BTypora%5D%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p><strong>某天突发奇想,想创建一个博客，决定将以后学习和工作中遇到的有意思的内容都通过博客记录下来一方面是想让自己加深印像，努力让自己在这个技术快速更新迭代的时代不会被淘汰，另一方面也是想将自己的所学所感记录下来让更多想学习的人多一分突破的灵感，最后，由于首次编写，如果有笔误或者哪个地方理解不深希望各位老师多多批评指导。谢谢大家~~</strong></p><p>[TOC]</p><h5 id="简介"><a href="#简介：" class="headerlink" title="简介："></a>简介：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">介绍Typora就需要介绍Makedown，有的童鞋可能会说了这是什么鬼？其实很简单，makedown就是可以使用普通文本编辑器编辑的标记语言，简单点说就是简单的标记语法，可以使普通文本内容具有一定的格式，并对内容有一定的熏染作用，由于是轻量极的，实现的功能有限，所以就就出现了很多延伸的编译软件，而Typora就是MakeDown其中一个扩展，并且它是一个编写和显示结合的编辑器（有许多是分屏，一半编写一半是效果）并且主要一点：语法明了，易于上手，世界上最流行的博客平台WorldPress和大型CMS如Joomla，Drupal都能很好的支持它的格式。</span><br><span class="line"></span><br><span class="line">如果有兴趣的童鞋我可以推荐一款名叫：pandoc的开源转换工具，可以去研究，它可以实现常见的格式转换，并且支持全平台操作，以命令行的方式进行转换，以后有机会再另开一篇介绍，同附下载地址。</span><br></pre></td></tr></table></figure><h5 id="typora-下载地址"><a href="#Typora-下载地址：" class="headerlink" title="Typora 下载地址："></a>Typora 下载地址：</h5><p>​    <a href="https://www.typora.io/#windows" target="_blank" rel="noopener">Typora 下载地址</a>    </p><h5 id="1安装"><a href="#1-安装：" class="headerlink" title="1.安装："></a>1.安装：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击默认安装就ok，路径自由选择</span><br></pre></td></tr></table></figure><h5 id="pandoc-下载地址"><a href="#Pandoc-下载地址：" class="headerlink" title="Pandoc 下载地址："></a>Pandoc 下载地址：</h5><p>​    <a href="https://github.com/jgm/pandoc/releases/tag/2.1.3" target="_blank" rel="noopener">Pandoc 下载地址</a></p><h5 id="安装"><a href="#安装：" class="headerlink" title="安装："></a>安装：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">双击安装默认进行，所生成的文件是.md结尾的</span><br></pre></td></tr></table></figure><h5 id="2使用"><a href="#2-使用：" class="headerlink" title="2.使用："></a>2.使用：</h5><h6 id="a标题"><a href="#A-标题：" class="headerlink" title="A.标题："></a>A.标题：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标题共有六级：一级最大六级最小。</span><br><span class="line"></span><br><span class="line">实现方法：第一种，几级标题就在标题前后加几个#；如 一级标题 ：  #    这是一级标题   #</span><br></pre></td></tr></table></figure><p>第二种，快捷键，直接在标题写完后直接按Ctrl+（你需要的标题数字）； 如：一级标题： 这是一级标题Ctrl+1；</p><h6 id="b文本"><a href="#B-文本：" class="headerlink" title="B.文本："></a>B.文本：</h6><h6 id="a居中"><a href="#a-居中：" class="headerlink" title="a.居中："></a>a.居中：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接在要居中的文本前后加上center标签就可以；</span><br><span class="line"></span><br><span class="line">\&lt;center\&gt;这是要居中的文本内容\&lt;/center\&gt;</span><br></pre></td></tr></table></figure><p>​         </p><h6 id="b下划线"><a href="#b-下划线" class="headerlink" title="b.下划线:"></a>b.下划线:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">两种方法：1，在待操作内容前后加上u标签 例子： \&lt;u&gt; 下划线\&lt;/u&gt;</span><br><span class="line"></span><br><span class="line">2，在待操作内容后面直接Ctrl+u；</span><br><span class="line"></span><br><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure><h6 id="c删除线"><a href="#c-删除线" class="headerlink" title="c.删除线:"></a>c.删除线:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接在待操作内容前后加两个‘~~’ ；例子：~\~删除线~\~</span><br><span class="line"></span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p>​    </p><h6 id="d字体加粗"><a href="#d-字体加粗" class="headerlink" title="d.字体加粗:"></a>d.字体加粗:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">两种方法：1 在待操作数据前后加上两个‘**’   例如：\*\*加粗\*\*</span><br><span class="line"></span><br><span class="line">2 快捷键：直接在待操作文件后面加Ctrl+B</span><br><span class="line"></span><br><span class="line">**加粗**</span><br></pre></td></tr></table></figure><h6 id="e字体倾斜"><a href="#e-字体倾斜" class="headerlink" title="e.字体倾斜:"></a>e.字体倾斜:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">两个办法： 1 在待操作数据前后加一个‘*’ 例如：\*斜体\*</span><br><span class="line"></span><br><span class="line">2   在待操作内容后加Ctrl+i</span><br><span class="line"></span><br><span class="line">*斜体*</span><br></pre></td></tr></table></figure><h6 id="f图片插入"><a href="#f-图片插入" class="headerlink" title="f.图片插入:"></a>f.图片插入:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接拖拽到你想要的地点就好；</span><br></pre></td></tr></table></figure><h6 id="g超链接"><a href="#g-超链接：" class="headerlink" title="g.超链接："></a>g.超链接：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">快捷键Ctrl+K</span><br><span class="line"></span><br><span class="line">\[自定义内容\]\(超链接地址\)   例如：\[百度一下\](http://www.baibu.com)</span><br><span class="line"></span><br><span class="line">[百度一下](http://www.baidu.com)</span><br></pre></td></tr></table></figure><p>​    </p><h6 id="h代码区域"><a href="#h-代码区域" class="headerlink" title="h.代码区域:"></a>h.代码区域:</h6><p>Typora支持对多语言的代码区域进行<strong>语法高亮</strong>。里面的原因涵盖了大部分经常使用的编程语言，其中包括C++，Python，java ，甚至包含spreadsheet(也就是Excel电子表格)，如果设置代码语言为flow，还可以直接画出流程图；还可以使用相应的方法画出时序图等图表。</p><p><strong>使用格式</strong>：```+编程语言    如：  ```java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(“This is Java Code”);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">mian()&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;“This is C++ Code”&lt;&lt;end1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="i表格"><a href="#i-表格" class="headerlink" title="i.表格:"></a>i.表格:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">快捷键 ctrl+T ，自动跳出行和列的设置框，</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td></tr></tbody></table><h6 id="j自动生成目录列表"><a href="#j-自动生成目录列表" class="headerlink" title="j.自动生成目录列表:"></a>j.自动生成目录列表:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\[toc]回车就好，这个目录抽取文章所有标题</span><br></pre></td></tr></table></figure><h6 id="k任务列表"><a href="#k-任务列表" class="headerlink" title="k.任务列表:"></a>k.任务列表:</h6><p>前面加  -     +    *   效果都是一样的。</p><p>-  [ ] 文字（注意空格，- 后有一个，括号有空格，文字前有空格）</p><p>- [ ] 文字</p><ul><li style="list-style: none"><input type="checkbox"> 文字</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">###### l.水平分割线:</span><br></pre></td></tr></table></figure><p>***或者—</p><hr><hr><h6 id="m引用"><a href="#m-引用" class="headerlink" title="m.引用:"></a>m.引用:</h6><p>>+空格</p><blockquote><ul><li>这里是引用的内容</li></ul></blockquote><h6 id="n标注"><a href="#n-标注" class="headerlink" title="n.标注:"></a>n.标注:</h6><p>这是标注<a href="没错它显示的就是这个内容。">^标题</a></p><p>格式：文字[\^标注的文字]</p><p>注解 内容部分格式：[^上面标注的文字]:对上面内容解释。</p><h6 id="o流程图"><a href="#o-流程图" class="headerlink" title="o.流程图:"></a>o.流程图:</h6><p>关于流程图，我查阅了相关的内容typora并没有直接绘图的，但是现在我不过如果想实现有两种方法，一种是在设置中将编些格式转化成为为makedown的格式然后安装makedown的格式进行编写，但是这个比较复杂，主要推荐第二种，就是将自己要实现的流程提通过电脑系统知道的画图软件就可以直接生成好，利用屏幕截取功能（如果不知道电脑屏幕截取快捷键就直接打开腾讯QQ就可以了）将生成好的图片直接拖进去就可以。</p><p><strong>以上就是本次编写关于typora的全部内容，当然还有很多没有列举出来比如数学公式，但上面都是一个程序员常用的部分，希望我的分享能够给你带来实质性的帮助，读完之后如果有什么意见或建议非常希望您能提出来，我也会积极的去改正。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
